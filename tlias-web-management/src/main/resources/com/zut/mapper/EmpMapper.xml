<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zut.mapper.EmpMapper">
<!--    根据id集合循环获取集合中的id 删除员工基本信息-->
    <delete id="deleteByIds">
        delete from emp where id in
<foreach collection="ids" item="id" separator="," open="(" close=")">
    #{id}
</foreach>
    </delete>


<!--   条件查询-->
<!--    会根据条件是否成立，动态生成where关键字-->
<!--    自动去除第一个条件的and或者or-->
<select id="list" resultType="com.zut.pojo.Emp">
    select emp.*,dept.name deptName from emp left join dept on emp.dept_id = dept.id
   <where>
        <if test="name !=null and name !='' ">
            <!--  concat拼接字符串，这里不能直接写 '%#{name}%'，写在引号内的不会被识别为占位符-->
            emp.name like concat('%',#{name},'%')
        </if>
      <if test="gender !=null">
          and emp.gender=#{gender}
      </if>
      <if test="begin !=null and end != null ">
          and emp.entry_date between #{begin} and #{end}
      </if>
   </where>
    order by emp.update_time desc
</select>



<!--    手动封装resultMap-->
    <resultMap id="empResultMap" type="com.zut.pojo.Emp">
<!--        主键用id标签-->
      <id column="id" property="id"/>
<!--        普通属性<result column="字段名" property="封装属性名"/>-->
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>

<!--       集合封装-->
<!--        ofType: one  of  type-->
        <collection property="exprList" ofType="com.zut.pojo.EmpExpr">
           <id column="ee_id" property="id"/>
            <result column="ee.emp_id" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
       </collection>
    </resultMap>
<!-- 更新前的信息回显操作   根据id查询员工详细信息 封装多个Emp对象，多段工作经历-->
    <select id="getById" resultMap="empResultMap">
        select
            e.*,
            ee.id ee_id,
            ee.begin ee_begin,
            ee.end ee_end,
            ee.company ee_company,
            ee.job ee_job
        from emp e left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id};
    </select>

<!--    根据id动态更新员工-->
    <!-- 根据ID更新员工信息 -->
    <update id="update">
        update emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>

<!--     统计各职位的对应人数-->
    <select id="getJobData" resultType="java.util.Map">
        select
            (case job when 1 then '班主任'
                      when 2 then '讲师'
                      when 3 then '学生主管'
                      when 4 then '校研主管'
                      when 5 then '咨询师'
                      else '其他'end ) pos,
            count(*) posCount
        from emp group by job;
    </select>

    <select id="getGenderDataMaps" resultType="java.util.Map">
        select
            if(gender=1,'男性员工','女性员工') name,
            count(*) value
        from emp group by gender;
    </select>

<!--    查询所有班主任列表 用于添加班级时选择班主任-->
    <!-- 查询所有的员工姓名及ID（仅返回id和name） -->
<!--    如多重复已经在service逻辑层在name后拼接该员工id 用以区分-->
    <select id="selectList" resultType="com.zut.pojo.Emp">
        SELECT id,username,password,name,gender,image,job,salary,entry_date,dept_id,create_time,update_time
        FROM emp
        WHERE name IS NOT NULL AND name != ''  <!-- 过滤空姓名 -->
        ORDER BY name  <!-- 按姓名排序，方便前端查看 -->
    </select>
</mapper>